Grading at 11/08/2017:12:24:48.548255
For commit ID a0e00525a8622325596126e8dc91bdfc0aa415ca
compiling
g++ -ggdb3 -Wall -Werror -pedantic -o testFreq testFreq.cpp readFreq.cpp
Make succeed, testFreq created
Testcase 1
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==16947== Memcheck, a memory error detector
==16947== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16947== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==16947== Command: ./testFreq /etc/issue
==16947== Parent PID: 16946
==16947== 
==16947== Conditional jump or move depends on uninitialised value(s)
==16947==    at 0x400D80: main (testFreq.cpp:13)
==16947== 
==16947== Use of uninitialised value of size 8
==16947==    at 0x4F3BB13: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16947==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16947==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16947==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16947==    by 0x400DBF: main (testFreq.cpp:17)
==16947== 
==16947== Conditional jump or move depends on uninitialised value(s)
==16947==    at 0x4F3BB1F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16947==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16947==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16947==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16947==    by 0x400DBF: main (testFreq.cpp:17)
==16947== 
==16947== 
==16947== HEAP SUMMARY:
==16947==     in use at exit: 72,704 bytes in 1 blocks
==16947==   total heap usage: 5 allocs, 4 frees, 83,504 bytes allocated
==16947== 
==16947== LEAK SUMMARY:
==16947==    definitely lost: 0 bytes in 0 blocks
==16947==    indirectly lost: 0 bytes in 0 blocks
==16947==      possibly lost: 0 bytes in 0 blocks
==16947==    still reachable: 0 bytes in 0 blocks
==16947==         suppressed: 72,704 bytes in 1 blocks
==16947== 
==16947== For counts of detected and suppressed errors, rerun with: -v
==16947== Use --track-origins=yes to see where uninitialised values come from
==16947== ERROR SUMMARY: 292 errors from 3 contexts (suppressed: 0 from 0)
Testcase 2
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==16951== Memcheck, a memory error detector
==16951== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16951== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==16951== Command: ./testFreq /etc/services
==16951== Parent PID: 16950
==16951== 
==16951== Conditional jump or move depends on uninitialised value(s)
==16951==    at 0x400D80: main (testFreq.cpp:13)
==16951== 
==16951== Use of uninitialised value of size 8
==16951==    at 0x4F3BB13: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16951==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16951==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16951==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16951==    by 0x400DBF: main (testFreq.cpp:17)
==16951== 
==16951== Conditional jump or move depends on uninitialised value(s)
==16951==    at 0x4F3BB1F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16951==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16951==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16951==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16951==    by 0x400DBF: main (testFreq.cpp:17)
==16951== 
==16951== 
==16951== HEAP SUMMARY:
==16951==     in use at exit: 72,704 bytes in 1 blocks
==16951==   total heap usage: 5 allocs, 4 frees, 83,504 bytes allocated
==16951== 
==16951== LEAK SUMMARY:
==16951==    definitely lost: 0 bytes in 0 blocks
==16951==    indirectly lost: 0 bytes in 0 blocks
==16951==      possibly lost: 0 bytes in 0 blocks
==16951==    still reachable: 0 bytes in 0 blocks
==16951==         suppressed: 72,704 bytes in 1 blocks
==16951== 
==16951== For counts of detected and suppressed errors, rerun with: -v
==16951== Use --track-origins=yes to see where uninitialised values come from
==16951== ERROR SUMMARY: 654 errors from 3 contexts (suppressed: 0 from 0)
Testcase 3
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==16955== Memcheck, a memory error detector
==16955== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16955== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==16955== Command: ./testFreq /usr/share/dict/words
==16955== Parent PID: 16954
==16955== 
==16955== Conditional jump or move depends on uninitialised value(s)
==16955==    at 0x400D80: main (testFreq.cpp:13)
==16955== 
==16955== Use of uninitialised value of size 8
==16955==    at 0x4F3BB13: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16955==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16955==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16955==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16955==    by 0x400DBF: main (testFreq.cpp:17)
==16955== 
==16955== Conditional jump or move depends on uninitialised value(s)
==16955==    at 0x4F3BB1F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16955==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16955==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16955==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16955==    by 0x400DBF: main (testFreq.cpp:17)
==16955== 
==16955== 
==16955== HEAP SUMMARY:
==16955==     in use at exit: 72,704 bytes in 1 blocks
==16955==   total heap usage: 5 allocs, 4 frees, 83,504 bytes allocated
==16955== 
==16955== LEAK SUMMARY:
==16955==    definitely lost: 0 bytes in 0 blocks
==16955==    indirectly lost: 0 bytes in 0 blocks
==16955==      possibly lost: 0 bytes in 0 blocks
==16955==    still reachable: 0 bytes in 0 blocks
==16955==         suppressed: 72,704 bytes in 1 blocks
==16955== 
==16955== For counts of detected and suppressed errors, rerun with: -v
==16955== Use --track-origins=yes to see where uninitialised values come from
==16955== ERROR SUMMARY: 734 errors from 3 contexts (suppressed: 0 from 0)
Testcase 4
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==16959== Memcheck, a memory error detector
==16959== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==16959== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==16959== Command: ./testFreq /usr/share/dict/cracklib-small
==16959== Parent PID: 16958
==16959== 
==16959== Conditional jump or move depends on uninitialised value(s)
==16959==    at 0x400D80: main (testFreq.cpp:13)
==16959== 
==16959== Use of uninitialised value of size 8
==16959==    at 0x4F3BB13: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16959==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16959==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16959==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16959==    by 0x400DBF: main (testFreq.cpp:17)
==16959== 
==16959== Conditional jump or move depends on uninitialised value(s)
==16959==    at 0x4F3BB1F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16959==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16959==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16959==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==16959==    by 0x400DBF: main (testFreq.cpp:17)
==16959== 
==16959== 
==16959== HEAP SUMMARY:
==16959==     in use at exit: 72,704 bytes in 1 blocks
==16959==   total heap usage: 5 allocs, 4 frees, 83,504 bytes allocated
==16959== 
==16959== LEAK SUMMARY:
==16959==    definitely lost: 0 bytes in 0 blocks
==16959==    indirectly lost: 0 bytes in 0 blocks
==16959==      possibly lost: 0 bytes in 0 blocks
==16959==    still reachable: 0 bytes in 0 blocks
==16959==         suppressed: 72,704 bytes in 1 blocks
==16959== 
==16959== For counts of detected and suppressed errors, rerun with: -v
==16959== Use --track-origins=yes to see where uninitialised values come from
==16959== ERROR SUMMARY: 532 errors from 3 contexts (suppressed: 0 from 0)

Overall Grade: F
